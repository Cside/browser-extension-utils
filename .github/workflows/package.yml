name: ci

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com/

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8

      - id: pnpm-cache
        run: |
          echo "PNPM_CACHE_DIR=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.PNPM_CACHE_DIR }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install --no-frozen-lockfile

      - run: pnpm run build

      # publish可能かのステータスを見る（0が正常。1がエラー）
      - id: publishable
        name: Check Publishable
        run: "\
          npx can-npm-publish --verbose \
          && echo status=0 >> $GITHUB_OUTPUT \
          || echo status=1 >> $GITHUB_OUTPUT"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WRITABLE_TOKEN }}

      # publish可能(まだpublishされていないバージョン)ならpublishする
      - name: Publish npm package
        if: ${{ steps.publishable.outputs.status == 0 }}
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WRITABLE_TOKEN }}

      # package.jsonのバージョンを取得する
      - id: package-version
        name: Register Package Version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_OUTPUT

      # tagが振られてなかったら振る
      - name: Add Tag
        uses: pkgdeps/git-tag-action@v2
        with:
          github_token: ${{ secrets.WRITABLE_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ steps.package-version.outputs.PACKAGE_VERSION }}
          git_commit_sha: ${{ github.sha }}

      # https://action-slack.netlify.app/usage/
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,ref,workflow,took
          username: Github Actions
          icon_emoji: ':github:'
          text: ${{ job.status }}
          author_name: ''
          mention: channel
          if_mention: failure
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
